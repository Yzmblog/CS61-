A： 最大收获：递归思想 python树、链表


1、解决递归无法使用变量记录问题：将变量作为参数传入函数
未解决：cats projects // problem unsolved
不懂：迭代器，可迭代参数
    生成新分支(改值)： {function（b） for b in branches（t）}
2.抽象数据视为整体
3.静态变量：nonlocal   可用于跟踪位置（类似指针）
4、nonlocal 在函数里的函数定义内声明函数的参数可以，在外面不行？ 现在内嵌函数外声明 再声明nonlocal python有+= 没有 ++
5、'{0} to {1}'.format(-8, 16) ： 结果：-8 to 16
6、list： a=b 为浅拷贝
7、生成器 ： yeild 迭代器：iter（） 遍历：next（）
8、 遍历树： for+递归 for遍历树枝
9、while 循环内 word自动遍历table？
10、nonlocal 与 global ： nonlocal 只能用于嵌套函数  global用于任何地方
11、__str__ and __repr__
12、树递归的抽象理解
13、 interpretor：read：lexer（分析器）+parser（解释器）
                 evaluation：eval + apply
                 print
B：
编译器作用：
1、执行前检查错误
2、加速 实际运行的是二进制文件（.0bj/.class（java）），代码编译而成

